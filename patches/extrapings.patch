Index: src/fpsgame/client.cpp
===================================================================
--- src/fpsgame/client.cpp	(revision 6502)
+++ src/fpsgame/client.cpp	(working copy)
@@ -118,6 +118,8 @@

     bool senditemstoserver = false, sendcrc = false; // after a map change, since server doesn't have map data
     int lastping = 0;
+    int lastextraping = 0;
+    VARP(enablep1xbratendetection, 0, 1, 1);

     bool connected = false, remote = false, demoplayback = false, gamepaused = false;
     int sessionid = 0, mastermode = MM_OPEN, gamespeed = 100;
@@ -347,6 +349,8 @@
     }
     ICOMMAND(isai, "ii", (int *cn, int *type), intret(isai(*cn, *type) ? 1 : 0));

+    ICOMMAND(getpbconfidence, "i", (int *cn), { fpsent *c = getclient(*cn); intret(c ? c->p1xbratenconfidence : -1); });
+
     int parseplayer(const char *arg)
     {
         char *end;
@@ -1046,7 +1050,15 @@
             putint(p, N_PING);
             putint(p, totalmillis);
             lastping = totalmillis;
+            lastextraping = totalmillis;
         }
+        else if(totalmillis-lastextraping>99) // send two extra N_CLIENTPING packets between each normal one
+        {
+            putint(p, N_CLIENTPING);
+            int delta = ((totalmillis-lastping)/99)%2 ? -1 : 2;
+            putint(p, player1->ping+delta); // others will see 3 N_CLIENTPINGs from us within 250ms: ping (0ms), ping-1 (99ms), ping+2 (198ms)
+            lastextraping = totalmillis;
+        }
         sendclientpacket(p.finalize(), 1);
     }

@@ -1760,10 +1772,28 @@
                 addmsg(N_CLIENTPING, "i", player1->ping = (player1->ping*5+totalmillis-getint(p))/6);
                 break;
             case N_CLIENTPING:
+            {
                 if(!d) return;
-                d->ping = getint(p);
+                if(!enablep1xbratendetection) d->ping = getint(p);
+                else
+                {
+                    int ping = getint(p);
+                    int expecteddelta = (d->extrapings+1)%3 ? ((d->extrapings+1)%2 ? -1 : 2) : 0; // 0, -1, 2, 0 -1, 2, ...
+                    if(expecteddelta && ping==d->ping+expecteddelta)
+                    {
+                        d->extrapings++;
+                        d->p1xbratenconfidence += d->extrapings * 2;
+                        d->p1xbratenconfidence = min(d->p1xbratenconfidence, 1000);
+                    }
+                    else
+                    {
+                        d->ping = ping;
+                        if(expecteddelta) d->p1xbratenconfidence = max(d->p1xbratenconfidence-2, 0);
+                        d->extrapings = 0;
+                    }
+                }
                 break;
-
+            }
             case N_TIMEUP:
                 timeupdate(getint(p));
                 break;
Index: src/fpsgame/game.h
===================================================================
--- src/fpsgame/game.h	(revision 6502)
+++ src/fpsgame/game.h	(working copy)
@@ -557,9 +557,10 @@
     int playermodel;
     ai::aiinfo *ai;
     int ownernum, lastnode;
+    int extrapings, p1xbratenconfidence;

     vec muzzle;

-    fpsent() : weight(100), clientnum(-1), privilege(PRIV_NONE), lastupdate(0), plag(0), ping(0), lifesequence(0), respawned(-1), suicided(-1), lastpain(0), attacksound(-1), attackchan(-1), idlesound(-1), idlechan(-1), frags(0), flags(0), deaths(0), totaldamage(0), totalshots(0), suicides(0), edit(NULL), smoothmillis(-1), playermodel(-1), ai(NULL), ownernum(-1), muzzle(-1, -1, -1)
+    fpsent() : weight(100), clientnum(-1), privilege(PRIV_NONE), lastupdate(0), plag(0), ping(0), lifesequence(0), respawned(-1), suicided(-1), lastpain(0), attacksound(-1), attackchan(-1), idlesound(-1), idlechan(-1), frags(0), flags(0), deaths(0), totaldamage(0), totalshots(0), suicides(0), edit(NULL), smoothmillis(-1), playermodel(-1), ai(NULL), ownernum(-1), extrapings(0), p1xbratenconfidence(0), muzzle(-1, -1, -1)
     {
         name[0] = team[0] = info[0] = 0;
