Index: src/engine/main.cpp
===================================================================
--- src/engine/main.cpp	(revision 6488)
+++ src/engine/main.cpp	(working copy)
@@ -1031,31 +1031,39 @@
     gle::disable();
     SDL_GL_SwapWindow(screen);
 }
-
+
 VAR(menufps, 0, 60, 1000);
 VARP(maxfps, 0, 200, 1000);
+VARP(tickrate, 0, 0, 1000);

-void limitfps(int &millis, int curmillis)
+void ratelimit(int &millis, int lastdrawmillis, bool &draw)
 {
-    int limit = (mainmenu || minimized) && menufps ? (maxfps ? min(maxfps, menufps) : menufps) : maxfps;
-    if(!limit) return;
-    static int fpserror = 0;
-    int delay = 1000/limit - (millis-curmillis);
-    if(delay < 0) fpserror = 0;
-    else
+    int fpslimit = (mainmenu || minimized) && menufps ? (maxfps ? min(maxfps, menufps) : menufps) : maxfps;
+    if(!fpslimit) draw = true;
+    int tickratelimit = tickrate ? max(tickrate, fpslimit) : 0;
+    if(!fpslimit && !tickratelimit) return;
+    int delay = 1;
+    if(tickratelimit) delay = 1000/tickratelimit - (millis-totalmillis);
+    // should we draw?
+    int fpsdelay = INT_MAX;
+    if(fpslimit)
     {
-        fpserror += 1000%limit;
-        if(fpserror >= limit)
+        fpsdelay = 1000/fpslimit - (millis-lastdrawmillis);
+        static int fpserror = 0;
+        if(fpserror >= fpslimit) fpsdelay++;
+        if(fpsdelay <= delay)
         {
-            ++delay;
-            fpserror -= limit;
+            draw = true;
+            if(fpserror >= fpslimit) fpserror -= fpslimit;
+            fpserror += 1000%fpslimit;
         }
-        if(delay > 0)
-        {
-            SDL_Delay(delay);
-            millis += delay;
-        }
     }
+    delay = min(delay, fpsdelay);
+    if(delay > 0)
+    {
+        SDL_Delay(delay);
+        millis += delay;
+    }
 }

 #if defined(WIN32) && !defined(_DEBUG) && !defined(__GNUC__)
@@ -1346,9 +1354,10 @@

     for(;;)
     {
-        static int frames = 0;
+        static int frames = 0, lastdrawmillis = 0;
         int millis = getclockmillis();
-        limitfps(millis, totalmillis);
+        bool draw = false;
+        ratelimit(millis, lastdrawmillis, draw);
         elapsedtime = millis - totalmillis;
         static int timeerr = 0;
         int scaledtime = game::scaletime(elapsedtime) + timeerr;
@@ -1356,10 +1365,10 @@
         timeerr = scaledtime%100;
         if(!multiplayer(false) && curtime>200) curtime = 200;
         if(game::ispaused()) curtime = 0;
-		lastmillis += curtime;
+        lastmillis += curtime;
         totalmillis = millis;
         updatetime();
-
+
         checkinput();
         menuprocess();
         tryedit();
@@ -1370,24 +1379,31 @@

         serverslice(false, 0);

-        if(frames) updatefpshistory(elapsedtime);
-        frames++;
+        if(draw)
+        {
+            if(frames) updatefpshistory(millis-lastdrawmillis);
+            frames++;
+        }

         // miscellaneous general game effects
         recomputecamera();
-        updateparticles();
+        if(draw) updateparticles();
         updatesounds();

         if(minimized) continue;

-        inbetweenframes = false;
-        if(mainmenu) gl_drawmainmenu();
-        else gl_drawframe();
-        swapbuffers();
-        renderedframe = inbetweenframes = true;
+        if(draw)
+        {
+            inbetweenframes = false;
+            if(mainmenu) gl_drawmainmenu();
+            else gl_drawframe();
+            swapbuffers();
+            renderedframe = inbetweenframes = true;
+            lastdrawmillis = millis;
+        }
     }
-
-    ASSERT(0);
+
+    ASSERT(0);
     return EXIT_FAILURE;

     #if defined(WIN32) && !defined(_DEBUG) && !defined(__GNUC__)
