Index: src/engine/rendergl.cpp
===================================================================
--- src/engine/rendergl.cpp	(revision 6496)
+++ src/engine/rendergl.cpp	(working copy)
@@ -2165,8 +2165,6 @@
 VARP(wallclock24, 0, 0, 1);
 VARP(wallclocksecs, 0, 0, 1);

-static time_t walltime = 0;
-
 VARP(showfps, 0, 1, 1);
 VARP(showfpsrange, 0, 0, 1);
 VAR(showeditstats, 0, 0, 1);
Index: src/engine/server.cpp
===================================================================
--- src/engine/server.cpp	(revision 6496)
+++ src/engine/server.cpp	(working copy)
@@ -45,11 +45,24 @@
     va_end(args);
 }

+time_t walltime = 0;

 static void writelog(FILE *file, const char *buf)
 {
     static uchar ubuf[512];
     size_t len = strlen(buf), carry = 0;
+    if(isdedicatedserver())
+    {
+        if(!walltime) { walltime = time(NULL); walltime -= totalmillis/1000; if(!walltime) walltime++; }
+        time_t walloffset = walltime + totalmillis/1000;
+        struct tm *localvals = localtime(&walloffset);
+        static string ts;
+        if(localvals)
+        {
+            int tslen = strftime(ts, sizeof(ts), "[%Y-%m-%d %H:%M:%S] ", localvals);
+            if(tslen) fwrite(ts, 1, tslen, file);
+        }
+    }
     while(carry < len)
     {
         size_t numu = encodeutf8(ubuf, sizeof(ubuf)-1, &((const uchar *)buf)[carry], len - carry, &carry);
Index: src/shared/iengine.h
===================================================================
--- src/shared/iengine.h	(revision 6496)
+++ src/shared/iengine.h	(working copy)
@@ -6,6 +6,7 @@
 extern int totalmillis;                 // total elapsed time
 extern uint totalsecs;
 extern int gamespeed, paused;
+extern time_t walltime;                 // wall time at engine startup (add totalmillis/1000 for current wall time)

 enum
 {
